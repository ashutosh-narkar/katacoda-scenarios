{
    "id": "opa-kubecon-ac-demo",
    "pathwayId": "opa",
    "pathwayTitle": "OPA",
    "title": "Kubernetes Admission Control with OPA (Open Policy Agent)",
    "description": "Learn how to enforce custom policies on Kubernetes objects using OPA",
    "difficulty": "beginner",
    "time": "10-15 minutes",
    "details": {
        "steps": [
            {
                "title": "Step 1 - Deploy Demo App in prod namespace",
                "text": "step1.md"
            },
            {
                "title": "Step 2 - Deploy Alice's version of the Demo App in dev namespace",
                "text": "step2.md"
            },
            {
                "title": "Step 3 - Why did this happen ?",
                "text": "step3.md"
            },
            {
                "title": "Step 4 - OPA to the rescue !",
                "text": "step4.md"
            },
            {
                "title": "Step 5 - Redeploy Alice's version of the Demo App",
                "text": "step5.md"
            }
        ],
        "intro": {
            "text": "intro.md",
            "courseData": "courseBase.sh",
            "credits": ""
        },
        "finish": {
            "text": "finish.md"
        },
        "assets": {
            "host01": [
              {"file": "demo.yaml", "target": "/root"},
              {"file": "demo_alice.yaml", "target": "/root"},
              {"file": "opa-admission-controller.yaml", "target": "/root"},
              {"file": "opa-ac.sh", "target": "/usr/local/bin", "chmod": "+x"},
              {"file": "ingress-conflicts.rego", "target": "/root"}
            ]
        }
    },
    "files": [
        "ingress-conflicts.rego"
      ],
    "environment": {
        "showdashboard": true,
        "dashboards": [{"name": "Demo", "port": 80}],
        "hideintro": false,
        "hidefinish": false,
        "uilayout": "editor-terminal",
        "uisettings": "yaml",
        "uimessage1": "\u001b[32mYour Interactive Bash Terminal.\u001b[m\r\n"
    },
    "backend": {
        "dockerimage": "minikube",
        "port": 80
    }
}